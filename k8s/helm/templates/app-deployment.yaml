apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.serviceName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app.serviceName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.serviceName }}
    spec:
      containers:
      - name: {{ .Values.app.serviceName }}
        image: {{ .Values.app.image.repository }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.app.containerPort }}
        resources:
          requests:
            memory: {{ .Values.app.resources.requests.memory }}
            cpu: {{ .Values.app.resources.requests.cpu }}
          limits:
            memory: {{ .Values.app.resources.limits.memory }}
            cpu: {{ .Values.app.resources.limits.cpu }}
        envFrom:
        - configMapRef:
            name: {{ .Values.app.serviceName }}-config
        - secretRef:
            name: {{ .Values.app.serviceName }}-secret
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: {{ .Values.app.containerPort }}
        #   initialDelaySeconds: 10
        #   periodSeconds: 5
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: {{ .Values.app.containerPort }}
        #   initialDelaySeconds: 15
        #   periodSeconds: 10
      {{- if .Values.app.image.pullSecretName }}
      imagePullSecrets:
      - name: {{ .Values.app.image.pullSecretName }}
      {{- end }} 