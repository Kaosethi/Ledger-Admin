apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.redis.configMaps.configuration | default "redis-configuration" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: {{ .Values.redis.serviceName }}
    app.kubernetes.io/name: redis
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  redis.conf: |-
    # Redis configuration file
    # Default redis server configuration
    
    # Set maximum memory limit and policy
    maxmemory {{ .Values.redis.config.maxmemory | default "512mb" }}
    maxmemory-policy {{ .Values.redis.config.maxmemoryPolicy | default "allkeys-lru" }}
    
    # CPU and memory saving settings
    maxclients {{ .Values.redis.config.maxclients | default "10000" }}
    timeout {{ .Values.redis.config.timeout | default "0" }}
    
    # Disable append only mode to avoid permission issues
    appendonly no
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.redis.configMaps.health | default "redis-health" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: {{ .Values.redis.serviceName }}
    app.kubernetes.io/name: redis
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.redis.configMaps.scripts | default "redis-scripts" }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: {{ .Values.redis.serviceName }}
    app.kubernetes.io/name: redis
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  start-master.sh: |-
    #!/bin/bash
    
    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    
    if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    
    ARGS=("--port" "${REDIS_PORT}")
    
    if [[ -n "$REDIS_PASSWORD" ]]; then
        ARGS+=("--requirepass" "${REDIS_PASSWORD}")
    fi
    
    exec redis-server /opt/bitnami/redis/etc/redis.conf "${ARGS[@]}" 