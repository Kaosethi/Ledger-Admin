apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: {{ .Values.namespace }}
  labels:
    app: postgresql
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.postgresql.replicaCount | default 1 }}
  serviceName: postgresql
  podManagementPolicy: OrderedReady
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
      containers:
      - name: postgresql
        image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresUser | default "postgres" | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.postgresPassword | default "postgres" | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresDb | default "postgres" | quote }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: {{ .Values.postgresql.resources.requests.cpu }}
            memory: {{ .Values.postgresql.resources.requests.memory }}
          limits:
            cpu: {{ .Values.postgresql.resources.limits.cpu }}
            memory: {{ .Values.postgresql.resources.limits.memory }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: config
          mountPath: /etc/postgresql/conf.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.postgresUser | default "postgres" }}
            - -d
            - {{ .Values.postgresql.postgresDb | default "postgres" }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.postgresUser | default "postgres" }}
            - -d
            - {{ .Values.postgresql.postgresDb | default "postgres" }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: postgresql-config
          defaultMode: 0644
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.postgresql.persistence.storageClass | default "cbs" }}
      resources:
        requests:
          storage: {{ .Values.postgresql.persistence.size }} 